name: Build CLI

on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths:
      - 'packages/cli/**'
  pull_request:
    branches:
      - '*'
    paths:
      - 'packages/cli/**'
  workflow_dispatch:

jobs:
  build:
    name: Build and Test CLI
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build CLI
        run: |
          pnpm --filter @zippie/vcr build

      - name: Test CLI help
        run: |
          pnpm --filter @zippie/vcr start --help

      - name: Check if Docker is available
        run: |
          docker --version
          docker ps

      - name: Test CLI build command
        run: |
          sudo modprobe vsock_loopback
          sudo modprobe vhost_vsock
          # Test that the build command works for all profiles in a directory with a Dockerfile
          cd packages/sample-python
          echo "Testing dev profile build..."
          node ../../packages/cli/dist/cli.js build --profile dev
          node ../../packages/cli/dist/cli.js up --profile dev || (node ../../packages/cli/dist/cli.js logs && false)
          node ../../packages/cli/dist/cli.js down
          node ../../packages/cli/dist/cli.js prune
          echo "Testing test profile build..."
          node ../../packages/cli/dist/cli.js build --profile test
          node ../../packages/cli/dist/cli.js up --profile test || (node ../../packages/cli/dist/cli.js logs && false)
          node ../../packages/cli/dist/cli.js down
          node ../../packages/cli/dist/cli.js prune
          echo "Testing prod profile build..."
          node ../../packages/cli/dist/cli.js build --profile prod 
          node ../../packages/cli/dist/cli.js up --profile prod || (node ../../packages/cli/dist/cli.js logs && false)
          node ../../packages/cli/dist/cli.js down
          node ../../packages/cli/dist/cli.js prune

      - name: Test CLI commands across profiles
        run: |
          cd packages/sample-python
          
          # Test each profile with comprehensive command testing
          for profile in dev test prod; do
            echo "=== Testing $profile profile ==="
            
            # Build and start the environment
            echo "Building and starting $profile environment..."
            node ../../packages/cli/dist/cli.js build --profile $profile
            node ../../packages/cli/dist/cli.js up --profile $profile
            
            # Wait a moment for the environment to be ready
            sleep 10
            
            # Test logs command (both application and system logs)
            echo "Testing logs command..."
            node ../../packages/cli/dist/cli.js logs || echo "Application logs test completed"
            node ../../packages/cli/dist/cli.js logs --system || echo "System logs test completed"
            
            # Test exec command (both container and system mode)
            echo "Testing exec command..."
            node ../../packages/cli/dist/cli.js exec "echo 'Hello from container'" || echo "Container exec test completed"
            node ../../packages/cli/dist/cli.js exec --system "echo 'Hello from system'" || echo "System exec test completed"
            
            # Test cat command
            echo "Testing cat command..."
            node ../../packages/cli/dist/cli.js exec "echo 'test content' > /tmp/test.txt" || echo "Creating test file completed"
            node ../../packages/cli/dist/cli.js cat container:/tmp/test.txt || echo "Cat test completed"
            
            # Clean up test files
            rm -f test-host.txt container-copied.txt
            
            # Stop the environment
            echo "Stopping $profile environment..."
            node ../../packages/cli/dist/cli.js down
            
            # Clean up
            echo "Cleaning up $profile environment..."
            node ../../packages/cli/dist/cli.js prune
            
            echo "=== $profile profile tests completed ==="
          done

      - name: Test CLI create command
        run: |
          # Test project creation with different templates
          echo "Testing project creation..."
          
          # Create a test directory for new projects
          mkdir -p /tmp/vcr-test-projects
          cd /tmp/vcr-test-projects
          
          # Test Python template
          echo "Testing Python template..."
          node $GITHUB_WORKSPACE/packages/cli/dist/cli.js create test-python --template python
          ls -la test-python/
          
          # Test Node.js template
          #echo "Testing Node.js template..."
          #node ../../packages/cli/dist/cli.js create test-node --template node
          #ls -la test-node/
          
          # Test Go template
          #echo "Testing Go template..."
          #node ../../packages/cli/dist/cli.js create test-go --template go
          #ls -la test-go/
          
          # Test Rust template
          #echo "Testing Rust template..."
          #node ../../packages/cli/dist/cli.js create test-rust --template rust
          #ls -la test-rust/
          
          # Clean up test projects
          rm -rf /tmp/vcr-test-projects

      - name: Test CLI prune commands
        run: |
          echo "Testing prune commands..."
          
          # Test local prune
          node $GITHUB_WORKSPACE/packages/cli/dist/cli.js prune --local || echo "Local prune test completed"
          
          # Test global prune
          node $GITHUB_WORKSPACE/packages/cli/dist/cli.js prune || echo "Global prune test completed"

      - name: Test CLI error handling
        run: |
          echo "Testing error handling..."
          
          # Test invalid commands
          node $GITHUB_WORKSPACE/packages/cli/dist/cli.js invalid-command 2>&1 | grep -q "Unknown command" || echo "Invalid command error handling test completed"
          
          # Test missing arguments
          node $GITHUB_WORKSPACE/packages/cli/dist/cli.js build 2>&1 | grep -q "No tag provided" || echo "Missing arguments error handling test completed"
          
          # Test invalid profile
          node $GITHUB_WORKSPACE/packages/cli/dist/cli.js build --profile invalid 2>&1 | grep -q "Error" || echo "Invalid profile error handling test completed"